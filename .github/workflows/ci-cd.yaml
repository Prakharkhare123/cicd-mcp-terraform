name: CI-CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/ai-cicd-app:${{ github.sha }}
    
    - name: Generate Terraform variables
      run: |
        cat > auto.tfvars << EOF
        image_tag = "${{ github.sha }}"
        dockerhub_username = "${{ secrets.DOCKERHUB_USERNAME }}"
        EOF
    
    - name: Save artifact
      uses: actions/upload-artifact@v4
      with:
        name: tfvars
        path: auto.tfvars

  terraform-plan:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/download-artifact@v4
      with:
        name: tfvars
        path: terraform
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
    
    - name: Create kubeconfig directory
      run: mkdir -p $HOME/.kube
    
    - name: Write kubeconfig
      run: echo "${KUBECONFIG_B64}" | base64 -d > $HOME/.kube/config
      env:
        KUBECONFIG_B64: ${{ secrets.KUBECONFIG_B64 }}
    
    - name: Terraform Init
      working-directory: terraform
      run: terraform init -input=false
    
    - name: Terraform Validate
      working-directory: terraform
      run: terraform validate
    
    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan -input=false -no-color

  terraform-apply:
    if: github.ref == 'refs/heads/main'
    needs: terraform-plan
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://example.com
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/download-artifact@v4
      with:
        name: tfvars
        path: terraform
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
    
    - name: Create kubeconfig directory
      run: mkdir -p $HOME/.kube
    
    - name: Write kubeconfig
      run: echo "${KUBECONFIG_B64}" | base64 -d > $HOME/.kube/config
      env:
        KUBECONFIG_B64: ${{ secrets.KUBECONFIG_B64 }}
    
    - name: Terraform Init
      working-directory: terraform
      run: terraform init -input=false
    
    - name: Terraform Plan (for approval log)
      working-directory: terraform
      run: terraform plan -input=false -no-color
    
    - name: âœ… Manual Approval
      uses: trstringer/manual-approval@v1
      with:
        secret: ${{ github.token }}
        approvers: ${{ secrets.APPROVERS_CSV }}
        minimum-approvals: 1
        timeout-minutes: 60
    
    - name: Terraform Apply
      working-directory: terraform
      run: terraform apply -input=false -auto-approve